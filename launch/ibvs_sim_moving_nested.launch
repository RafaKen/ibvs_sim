<?xml version="1.0"?>
<launch>
  <arg name="quadcopter_name"     default="quadcopter"/>
  <arg name="color"               default="White"/>
  <arg name="x"                   default="0"/>
  <arg name="y"                   default="0"/>
  <arg name="z"                   default="10.0"/>
  <arg name="yaw"                 default="0"/>

  <arg name="aruco_name"          default="boat"/>
  <arg name="x2"                  default="9"/>
  <arg name="y2"                  default="-9"/>
  <arg name="z2"                  default="0"/>
  <arg name="yaw2"                default="0"/>

  <arg name="debug"               default="false"/>

  <arg name="world_file" default="boat.world"/>

  <!-- ArUco args -->
  <arg name="show_camera" default="false" />
  <arg name="show_aruco_frame" default="true" />
  <arg name="draw_aruco_data" default="true" />

  <!-- Start Simulator -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find ibvs_sim)/worlds/$(arg world_file)"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="verbose" value="false"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Spawn Models in Gazebo -->
  <include file="$(find ibvs_sim)/launch/two_agent_spawn.launch">
    <arg name="agent_1_name"        value="$(arg quadcopter_name)" />
    <arg name="model"               value="$(find ibvs_sim)/agents/quadcopter/$(arg quadcopter_name).urdf.xacro" />
    <arg name="x"                   value="$(arg x)"/>
    <arg name="y"                   value="$(arg y)"/>
    <arg name="z"                   value="$(arg z)"/>
    <arg name="yaw"                 value="$(arg yaw)"/>
    <arg name="color"               value="$(arg color)"/>

    <arg name="agent_2_name"        value="$(arg aruco_name)" />
    <arg name="model2"              value="$(find ibvs_sim)/agents/boat/boat_jesse.xacro" />
    <arg name="x2"                  value="$(arg x2)"/>
    <arg name="y2"                  value="$(arg y2)"/>
    <arg name="z2"                  value="$(arg z2)"/>
    <arg name="yaw2"                value="$(arg yaw2)"/>
    <arg name="color2"              value="$(arg color)"/>
  </include>

  <!-- Controller -->
  <group ns="$(arg quadcopter_name)">

    <!-- Load common parameters -->
    <rosparam command="load" file="$(find ibvs_sim)/params/$(arg quadcopter_name).yaml"/>

    <!-- Is Flying Publisher -->
    <node pkg="rostopic" type="rostopic" name="is_flying_pub" args="pub is_flying std_msgs/Bool true"/>

    <!-- Status Publisher -->
    <node pkg="rostopic" type="rostopic" name="status_pub" args="pub -r 1 status rosflight_msgs/Status '{armed: true, failsafe: false, rc_override: false, offboard: true, error_code: 0, num_errors: 0, loop_time_us: 1}'"/>

    <!-- State Estimator -->
    <node pkg="roscopter" type="mekf" name="mekf" output="screen">
      <remap from="baro" to="baro/data"/>
      <remap from="sonar" to="sonar/data"/>
      <remap from="magnetometer" to="mag/data"/>
    </node>

    <!-- PID Position Controller -->
    <node name="controller" pkg="ibvs_sim" type="controller.py" output="screen">
      <remap from="estimate" to="ground_truth/odometry/NED"/>
      <!-- <remap from="estimate" to="estimate"/> -->
    </node>

    <!-- Waypoint Manager -->
    <node name="waypoint_manager" pkg="ibvs_sim" type="ibvs_state_machine.py" output="screen">
      <param name ="mode" value="roscopter" />

      <remap from="estimate" to="ground_truth/odometry/NED"/>
      <!-- <remap from="estimate" to="estimate"/> -->

      <param name="wp_threshold" value="0.5" />

      <remap from="/target_position" to="/boat/odometry/NED"/>
    </node>

    <!-- plot states -->
    <node pkg="roscopter" type="states_plotter.py" name="states_plotter" output="screen">
      <param name="time_window" value="10.0"/>
    </node>

  </group>

  <!-- Boat Controller Nodes -->
  <group ns="$(arg aruco_name)">
    <!-- Load controller parameters within namespace-->
    <rosparam command="load" file="$(find ibvs_sim)/agents/boat/boat_jesse.yaml"/>

    <!-- Boat controller-->
    <node pkg="ibvs_sim" name="boat_command" type="boat_cmd.py">
      <!-- max roll/pitch angle (degrees) -->
      <param name="max_roll_pitch" value="15.0"/>

      <param name="xy_translation" value="true"/>
      <param name="x_pos_cmd" value="$(arg x2)"/>
      <param name="y_pos_cmd" value="$(arg y2)"/>
    </node>

  </group>



  <!-- ........ -->
  <!-- IBVS_SIM -->
  <!-- ........ -->

  <!-- Load IBVS parameters -->
  <rosparam command="load" file="$(find ibvs_sim)/params/ibvs.yaml"/>

  <node name="p_des_mapper" pkg="ibvs_sim" type="p_des_mapper.py" output="screen">
  </node>

  <!-- IBVS -->
  <node name="ibvs_outer" pkg="ibvs_sim" type="ibvs_adaptive.py" output="screen">
    <remap from="/ibvs/pdes" to="/ibvs/pdes_outer"/>
    <remap from="/aruco/marker_corners" to="/aruco/marker_corners_outer"/>
    <remap from="/aruco/distance" to="/aruco/distance_outer"/>
    <remap from="/ibvs/ibvs_error" to="/ibvs/ibvs_error_outer" />
  </node>

  <node name="ibvs_inner" pkg="ibvs_sim" type="ibvs_adaptive.py" output="screen">
    <param name="adaptive" value="false"/>
    <remap from="/ibvs/pdes" to="/ibvs/pdes_inner"/>
    <remap from="/aruco/marker_corners" to="/aruco/marker_corners_inner"/>
    <remap from="/aruco/distance" to="/aruco/distance_inner"/>
    <remap from="/ibvs/vel_cmd" to="/ibvs_inner/vel_cmd"/>
    <remap from="/ibvs/ibvs_error" to="/ibvs/ibvs_error_inner" />
  </node>

  <!-- Level-frame visualizer -->
  <!-- <node pkg="ibvs_sim" type="level_frame_visualizer.py" name="level_frame_visualizer" output="screen" /> -->


  <!-- ..... -->
  <!-- ArUco -->
  <!-- ..... -->

  <!-- ArUco Localization -->
  <node pkg="aruco_localization" type="aruco_localization" name="aruco" output="screen">
    <param name="show_output_video" value="$(arg show_aruco_frame)" />
    <param name="markermap_config" value="$(find ibvs_sim)/params/nested148_65.yaml" />
    <!-- <param name="marker_size" value="0.1760" /> -->
    <param name="marker_size" value="0.7071" />
    <param name="marker_size_inner" value="0.125" />
    <param name="id_outer" value="148" />
    <param name="id_inner" value="65" />

    <param name="draw_data" value="$(arg draw_aruco_data)" />
    <param name="debug_save_input_frames" value="false" />
    <param name="debug_save_output_frames" value="false" />
    <param name="debug_image_path" value="/tmp/arucoimages" />

    <remap from="input_image" to="/quadcopter/camera/rgb" />
    <remap from="output_image" to="aruco/image" />
  </node>

  <!-- Wind Publisher -->
  <node name="wind_publisher" pkg="ibvs_sim" type="wind.py">
    <param name="wind_N" value="-15.0" />
    <param name="wind_E" value="0.0" />
  </node>

  <!-- Relative Vector Pub -->
  <node name="relative_vec_pub" pkg="ibvs_sim" type="rel_pos_pub.py">
    <remap from="/target_position" to="/boat/odometry/NED" />
  </node>


  <!-- ...... -->
  <!-- ROSBAG -->
  <!-- ...... -->
  <!-- <node name="record" pkg="rosbag" type="record" args="/quadcopter/ground_truth/odometry/NED /boat/odometry/NED /quadcopter/euler /boat/euler -o boat_copter_states_landing" output="screen"/> -->

  <group if="$(arg show_camera)">
    <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
      <remap from="image" to="/quadcopter/camera/rgb"/>
      <param name="autosize" value="true" />
    </node>
  </group>

</launch>
