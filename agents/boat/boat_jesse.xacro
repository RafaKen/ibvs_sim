<?xml version="1.0"?>

<robot name="boat" xmlns:xacro="http://ros.org/wiki/xacro">

	<!-- Properties -->
	<xacro:property name="boat_dict" value="${load_yaml('boat_jesse.yaml')}"/>
	<xacro:property name="boat_type" value="${boat_dict['boat_type']}"/>
	<xacro:property name="aruco_num" value="${boat_dict['aruco_num']}"/>
	<xacro:property name="namespace" value="boat"/>
	<xacro:property name="use_mesh_file" value="true"/>
	<xacro:property name="mesh_file" value="package://ibvs_sim/meshes/boat/${boat_type}_boat.dae"/>
	<xacro:property name="aruco_mesh_file_1" value="package://ibvs_sim/meshes/aruco_markers/aruco${aruco_num}.dae"/>
	<!--aruco4 doesn't work for some reason...-->
	<xacro:property name="body_width" value="0.505"/>
	<!--+++++++++++++++++++-->
	<xacro:property name="body_height" value="0.1"/>
	<!--+++++++++++++++++++-->
	<xacro:property name="body_inertia">
		<inertia ixx="${boat_dict['boat_ixx']}" ixy="${boat_dict['boat_ixy']}" ixz="${boat_dict['boat_ixz']}" iyy="${boat_dict['boat_iyy']}" iyz="${boat_dict['boat_iyz']}" izz="${boat_dict['boat_izz']}"/>
	</xacro:property>

	<!-- *********************** GAZEBO ROBOT DEFINITION ******************* -->
	<!-- Define the base link, which represents the boat itself -->
	<link name="${namespace}/boat_link">
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<xacro:if value="${boat_type == 'patrol'}">
					<mesh filename="${mesh_file}" scale="0.55 0.55 0.55"/>
				</xacro:if>
				<xacro:if value="${boat_type == 'pontoon'}">
					<mesh filename="${mesh_file}" scale="1 1 1"/>
				</xacro:if>
			</geometry>
		</visual>
		<!--
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<cylinder length="${body_height}" radius="${body_width}"/>
			</geometry>
		</collision>
		-->
	</link>
	<!-- Define the aruco link, which is attached to the base link via a rigid joint -->
	<link name="${namespace}/base_link">
		<inertial>
			<mass value="${boat_dict['boat_mass']}"/>
			<!-- [kg] -->
			<origin xyz="0 0 0"/>
			<xacro:insert_block name="body_inertia"/>
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<mesh filename="${aruco_mesh_file_1}" scale="1.0 1.0 1.0"/>
			</geometry>
		</visual>
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="2.0 2.0 0.2"/>
			</geometry>
		</collision>
	</link>
	<joint name="boat_to_base" type="fixed">
		<xacro:if value="${boat_type == 'patrol'}">
			<origin xyz="-3.5 0 0.2" rpy="0 0 0"/>
		</xacro:if>
		<xacro:if value="${boat_type == 'pontoon'}">
			<origin xyz="-1.75 0 -0.225" rpy="0 0 0"/>
		</xacro:if>
		<parent link="${namespace}/base_link"/>
		<child link="${namespace}/boat_link"/>
	</joint>

	<gazebo reference="${namespace}/boat_link">
		<material>Gazebo/$(arg color)</material>
	</gazebo>

	<!-- ************************* FORCES AND MOMENTS ********************** -->

	<xacro:include filename="$(find ibvs_sim)/plugins/xacro/boat_forces_and_moments.xacro"/>
	<xacro:boat_controller namespace="${namespace}" command_topic="boat_command"/>

	<!-- ***************** SENSORS ******************* -->
	<!-- Ground Truth (Odometry plugin gets orientation info from gazebo and publishes it
  		on the ROS network (as /.../ground_truth/odometry)-->
	<xacro:include filename="$(find rosflight_plugins)/xacro/odometry_sensor.xacro"/>
	<xacro:odometry_plugin_macro namespace="${namespace}" parent_link="${namespace}/base_link"/>

	<!-- Mount an IMU (not being used when you have odometry plugin)-->
	<xacro:include filename="$(find rosflight_plugins)/xacro/imu.xacro"/>
	<xacro:imu_plugin_macro namespace="${namespace}" parent_link="${namespace}/base_link"/>

	<!-- GPS -->
	<xacro:include filename="$(find rosflight_plugins)/xacro/GPS.xacro"/>
	<xacro:gps_plugin_macro namespace="${namespace}" parent_link="${namespace}/base_link"/>

</robot>
